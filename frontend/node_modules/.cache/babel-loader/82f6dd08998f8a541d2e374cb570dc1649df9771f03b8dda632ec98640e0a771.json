{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Downloads\\\\12-adv-starting-project\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// DONE\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// DONE\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// DONE\n// 4. Add properly working links to the MainNavigation\n// DONE\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// DONE\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// DONE\n// 7. Output the ID of the selected event on the EventDetailPage\n// DONE\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n// DONE\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\nimport EditEventPage from \"./Pages/EditEvent\";\nimport EventDetailPage, { loader as eventDetailLoader, action as deleteEventAction } from \"./Pages/EventDetail\";\nimport EventsPage, { loader as eventsLoader } from \"./Pages/Events\";\nimport HomePage from \"./Pages/Home\";\nimport NewEventPage from \"./Pages/NewEvent\";\nimport RootLayout from \"./Pages/Root\";\nimport EventsRootLayout from \"./Pages/EventsRoot\";\nimport ErrorPage from \"./Pages/Error\";\nimport { action as manipulateEventAction } from './components/EventForm.js';\nimport NewsletterPage from \"./Pages/Newsletter.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: ':eventId',\n      id: 'event-detail',\n      loader: eventDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 26\n        }, this),\n        action: deleteEventAction\n      }, {\n        path: \"edit\",\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 40\n        }, this),\n        action: manipulateEventAction\n      }]\n    }, {\n      path: \"new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 35\n      }, this),\n      action: manipulateEventAction\n    }]\n  }, {\n    path: 'newsletter',\n    element: /*#__PURE__*/_jsxDEV(NewsletterPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 18\n    }, this),\n    action: newsletterAction\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RouterProvider","createBrowserRouter","EditEventPage","EventDetailPage","loader","eventDetailLoader","action","deleteEventAction","EventsPage","eventsLoader","HomePage","NewEventPage","RootLayout","EventsRootLayout","ErrorPage","manipulateEventAction","NewsletterPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","newsletterAction","App","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Downloads/12-adv-starting-project/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// DONE\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// DONE\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// DONE\n// 4. Add properly working links to the MainNavigation\n// DONE\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// DONE\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// DONE\n// 7. Output the ID of the selected event on the EventDetailPage\n// DONE\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n// DONE\nimport { RouterProvider, createBrowserRouter } from \"react-router-dom\";\n\nimport EditEventPage from \"./Pages/EditEvent\";\nimport EventDetailPage, {\n  loader as eventDetailLoader,\n  action as deleteEventAction\n} from \"./Pages/EventDetail\";\nimport EventsPage, { loader as eventsLoader } from \"./Pages/Events\";\nimport HomePage from \"./Pages/Home\";\nimport NewEventPage from \"./Pages/NewEvent\";\nimport RootLayout from \"./Pages/Root\";\nimport EventsRootLayout from \"./Pages/EventsRoot\";\nimport ErrorPage from \"./Pages/Error\";\nimport {action as manipulateEventAction} from './components/EventForm.js';\nimport NewsletterPage from \"./Pages/Newsletter.js\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      { index: true, element: <HomePage /> },\n      {\n        path: \"events\",\n        element: <EventsRootLayout />,\n        children: [\n          {\n            index: true,\n            element: <EventsPage />,\n            loader: eventsLoader,\n          },\n          {\n            path: ':eventId',\n            id:'event-detail',\n            loader: eventDetailLoader,\n            children:[\n              {\n                index:true,\n                element: <EventDetailPage />,\n                action:deleteEventAction,\n              },\n              { path: \"edit\", element: <EditEventPage /> ,\n                action:manipulateEventAction\n\n              },\n            ]\n          },\n         \n          { path: \"new\", element: <NewEventPage />,action:manipulateEventAction },\n          \n        ],\n      },\n      {\n        path: 'newsletter',\n        element: <NewsletterPage />,\n        action: newsletterAction,\n\n      }\n    ],\n  },\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AAEtE,OAAOC,aAAa,MAAM,mBAAmB;AAC7C,OAAOC,eAAe,IACpBC,MAAM,IAAIC,iBAAiB,EAC3BC,MAAM,IAAIC,iBAAiB,QACtB,qBAAqB;AAC5B,OAAOC,UAAU,IAAIJ,MAAM,IAAIK,YAAY,QAAQ,gBAAgB;AACnE,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,SAAS,MAAM,eAAe;AACrC,SAAQR,MAAM,IAAIS,qBAAqB,QAAO,2BAA2B;AACzE,OAAOC,cAAc,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGlB,mBAAmB,CAAC,CACjC;EACEmB,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACN,UAAU;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,YAAY,eAAER,OAAA,CAACJ,SAAS;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC3BE,QAAQ,EAAE,CACR;IAAEC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACR,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACtC;IACEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEH,OAAA,CAACL,gBAAgB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC7BE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXP,OAAO,eAAEH,OAAA,CAACV,UAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvBrB,MAAM,EAAEK;IACV,CAAC,EACD;MACEW,IAAI,EAAE,UAAU;MAChBS,EAAE,EAAC,cAAc;MACjBzB,MAAM,EAAEC,iBAAiB;MACzBsB,QAAQ,EAAC,CACP;QACEC,KAAK,EAAC,IAAI;QACVP,OAAO,eAAEH,OAAA,CAACf,eAAe;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAC5BnB,MAAM,EAACC;MACT,CAAC,EACD;QAAEa,IAAI,EAAE,MAAM;QAAEC,OAAO,eAAEH,OAAA,CAAChB,aAAa;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QACxCnB,MAAM,EAACS;MAET,CAAC;IAEL,CAAC,EAED;MAAEK,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACP,YAAY;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAACnB,MAAM,EAACS;IAAsB,CAAC;EAG3E,CAAC,EACD;IACEK,IAAI,EAAE,YAAY;IAClBC,OAAO,eAAEH,OAAA,CAACF,cAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC3BnB,MAAM,EAAEwB;EAEV,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EACb,oBAAOb,OAAA,CAAClB,cAAc;IAACmB,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACO,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}