{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Downloads\\\\12-adv-starting-project\\\\12-adv-starting-project\\\\frontend\\\\src\\\\Pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData, defer, Await } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 21\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 1\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 1\n  }, this);\n}\n_s(EventsPage, \"22Av1LduzrZxSsk8kXUUCix36lQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return {isError:true,message:'Could not fetch events.'}\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch the events.\"\n    }), {\n      status: 500\n    });\n    // throw json({message:'Could not fetch events'},\n    //   {\n    //     status:500,\n    //   }\n    // );\n  } else {\n    return resData = await response.json();\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","defer","Await","Suspense","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","Response","JSON","stringify","message","status","resData","json","loader","$RefreshReg$"],"sources":["C:/Users/ACER/Downloads/12-adv-starting-project/12-adv-starting-project/frontend/src/Pages/Events.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\r\nimport { useLoaderData,defer,Await } from \"react-router-dom\";\r\nimport { Suspense } from \"react\";\r\nfunction EventsPage() {\r\n  const {events} = useLoaderData();\r\n  return(\r\n<Suspense fallback={<p style={{textAlign:'center'}}>Loading...</p>}>\r\n<Await resolve={events}>\r\n  {(loadedEvents)=><EventsList events={loadedEvents}/>}\r\n  </Await>;\r\n\r\n</Suspense>\r\n  \r\n\r\n  ) \r\n}\r\n\r\nexport default EventsPage;\r\n\r\nasync function loadEvents(){\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    // return {isError:true,message:'Could not fetch events.'}\r\n    throw new Response(\r\n      JSON.stringify({ message: \"Could not fetch the events.\" }),\r\n      {\r\n        status: 500,\r\n      }\r\n    );\r\n    // throw json({message:'Could not fetch events'},\r\n    //   {\r\n    //     status:500,\r\n    //   }\r\n    // );\r\n  } else {\r\n    return resData=await response.json();\r\n  }\r\n}\r\nexport  function loader() {\r\n return defer({\r\n    events:loadEvents()\r\n  })\r\n}\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAACC,KAAK,EAACC,KAAK,QAAQ,kBAAkB;AAC5D,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAACC;EAAM,CAAC,GAAGR,aAAa,CAAC,CAAC;EAChC,oBACFK,OAAA,CAACF,QAAQ;IAACM,QAAQ,eAAEJ,OAAA;MAAGK,KAAK,EAAE;QAACC,SAAS,EAAC;MAAQ,CAAE;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,gBACnEP,OAAA,CAACH,KAAK;MAACe,OAAO,EAAET,MAAO;MAAAI,QAAA,EACnBM,YAAY,iBAAGb,OAAA,CAACN,UAAU;QAACS,MAAM,EAAEU;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,KAEV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAIX;AAACT,EAAA,CAZQD,UAAU;EAAA,QACAN,aAAa;AAAA;AAAAmB,EAAA,GADvBb,UAAU;AAcnB,eAAeA,UAAU;AAEzB,eAAec,UAAUA,CAAA,EAAE;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA,MAAM,IAAIC,QAAQ,CAChBC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAA8B,CAAC,CAAC,EAC1D;MACEC,MAAM,EAAE;IACV,CACF,CAAC;IACD;IACA;IACA;IACA;IACA;EACF,CAAC,MAAM;IACL,OAAOC,OAAO,GAAC,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EACtC;AACF;AACA,OAAQ,SAASC,MAAMA,CAAA,EAAG;EACzB,OAAO9B,KAAK,CAAC;IACVO,MAAM,EAACY,UAAU,CAAC;EACpB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}